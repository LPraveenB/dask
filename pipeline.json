{
  "components": {
    "comp-custom-eval-job": {
      "executorLabel": "exec-custom-eval-job",
      "inputDefinitions": {
        "parameters": {
          "base_gcs_path": {
            "parameterType": "STRING"
          },
          "container_uri": {
            "parameterType": "STRING"
          },
          "data_split_path": {
            "parameterType": "STRING"
          },
          "fs_eval_path": {
            "parameterType": "STRING"
          },
          "job_name": {
            "parameterType": "STRING"
          },
          "job_suffix": {
            "parameterType": "STRING"
          },
          "location_group": {
            "parameterType": "STRING"
          },
          "master_machine_type": {
            "parameterType": "STRING"
          },
          "memory_limit": {
            "parameterType": "STRING"
          },
          "no_worker_threads": {
            "parameterType": "NUMBER_INTEGER"
          },
          "num_workers": {
            "parameterType": "NUMBER_INTEGER"
          },
          "project_id": {
            "parameterType": "STRING"
          },
          "project_location": {
            "parameterType": "STRING"
          },
          "replica_count": {
            "parameterType": "NUMBER_INTEGER"
          },
          "run_type": {
            "parameterType": "STRING"
          },
          "staging_bucket": {
            "parameterType": "STRING"
          },
          "worker_machine_type": {
            "parameterType": "STRING"
          }
        }
      }
    },
    "comp-custom-train-job": {
      "executorLabel": "exec-custom-train-job",
      "inputDefinitions": {
        "parameters": {
          "base_gcs_path": {
            "parameterType": "STRING"
          },
          "container_uri": {
            "parameterType": "STRING"
          },
          "data_split_path": {
            "parameterType": "STRING"
          },
          "eval_metric": {
            "parameterType": "STRING"
          },
          "feature_count": {
            "parameterType": "NUMBER_INTEGER"
          },
          "job_name": {
            "parameterType": "STRING"
          },
          "job_suffix": {
            "parameterType": "STRING"
          },
          "learning_rate": {
            "parameterType": "NUMBER_DOUBLE"
          },
          "location_group": {
            "parameterType": "STRING"
          },
          "master_machine_type": {
            "parameterType": "STRING"
          },
          "max_depth": {
            "parameterType": "NUMBER_INTEGER"
          },
          "memory_limit": {
            "parameterType": "STRING"
          },
          "min_child_weight": {
            "parameterType": "NUMBER_INTEGER"
          },
          "no_worker_threads": {
            "parameterType": "NUMBER_INTEGER"
          },
          "num_booster": {
            "parameterType": "NUMBER_INTEGER"
          },
          "num_workers": {
            "parameterType": "NUMBER_INTEGER"
          },
          "project_id": {
            "parameterType": "STRING"
          },
          "project_location": {
            "parameterType": "STRING"
          },
          "replica_count": {
            "parameterType": "NUMBER_INTEGER"
          },
          "run_type": {
            "parameterType": "STRING"
          },
          "scale_pos_multiply_factor": {
            "parameterType": "NUMBER_DOUBLE"
          },
          "staging_bucket": {
            "parameterType": "STRING"
          },
          "train_start_date": {
            "parameterType": "STRING"
          },
          "worker_machine_type": {
            "parameterType": "STRING"
          }
        }
      }
    }
  },
  "defaultPipelineRoot": "gs://user-bucket-dollar-tree/darshan/vertex_pipeline",
  "deploymentSpec": {
    "executors": {
      "exec-custom-eval-job": {
        "container": {
          "args": [
            "--executor_input",
            "{{$}}",
            "--function_to_execute",
            "custom_eval_job"
          ],
          "command": [
            "sh",
            "-c",
            "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'google-cloud-aiplatform==1.24.1' 'kfp==2.0.0' && \"$0\" \"$@\"\n",
            "sh",
            "-ec",
            "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
            "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef custom_eval_job(\n        project_id: str,\n        project_location: str,\n        container_uri: str,\n        staging_bucket: str,\n        job_name: str,\n        job_suffix: str,\n        replica_count: int,\n        master_machine_type: str,\n        worker_machine_type: str,\n        run_type: str,\n        memory_limit: str,\n        base_gcs_path: str,\n        num_workers: int,\n        no_worker_threads: int,\n        data_split_path: str,\n        fs_eval_path: str,\n        location_group: str):\n    \"\"\"Run a custom training job using a training script.\n    \"\"\"\n    import json\n    import logging\n    import os.path\n    import time\n    import google.cloud.aiplatform as aip\n\n\n    worker_pool_specs = [\n        {\n            \"machine_spec\": {\n                \"machine_type\": master_machine_type,\n            },\n            \"replica_count\": 1,\n            \"container_spec\": {\n                \"image_uri\": container_uri,\n                \"command\": ['bash', 'entrypoint.sh'],\n                \"args\": [\n                    '--run_name', job_name + '_' + job_suffix,\n                    '--run_type', run_type,\n                    '--memory_limit', memory_limit,\n                    '--base_gcs_path', base_gcs_path,\n                    '--num_workers', str(num_workers),\n                    '--no_worker_threads', str(no_worker_threads),\n                    '--data_split_path', data_split_path,\n                    '--fs_eval_path', fs_eval_path,\n                    '--location_group', location_group,\n                    '--steps', 'evaluate'\n                ],\n            },\n        },\n        {\n            \"machine_spec\": {\n                \"machine_type\": worker_machine_type,\n            },\n            \"replica_count\": replica_count,\n            \"container_spec\": {\n                \"image_uri\": container_uri,\n                \"command\": ['bash', 'entrypoint.sh'],\n                \"args\": [\n                    '--memory_limit', memory_limit,\n                    '--num_workers', str(num_workers),\n                    '--no_worker_threads', str(no_worker_threads)\n                ],\n            },\n        }\n    ]\n\n    my_job = aip.CustomJob(\n        display_name=job_name + '_' + job_suffix,\n        worker_pool_specs=worker_pool_specs,\n        staging_bucket=staging_bucket,\n        project=project_id,\n        location=project_location\n    )\n\n    my_job.run()\n\n"
          ],
          "image": "python:3.7"
        }
      },
      "exec-custom-train-job": {
        "container": {
          "args": [
            "--executor_input",
            "{{$}}",
            "--function_to_execute",
            "custom_train_job"
          ],
          "command": [
            "sh",
            "-c",
            "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'google-cloud-aiplatform==1.24.1' 'kfp==2.0.0' && \"$0\" \"$@\"\n",
            "sh",
            "-ec",
            "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
            "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef custom_train_job(\n        project_id: str,\n        project_location: str,\n        container_uri: str,\n        staging_bucket: str,\n        job_name: str,\n        job_suffix: str,\n        replica_count: int,\n        master_machine_type: str,\n        worker_machine_type: str,\n        run_type: str,\n        train_start_date: str,\n        memory_limit: str,\n        base_gcs_path: str,\n        num_workers: int,\n        no_worker_threads: int,\n        data_split_path: str,\n        location_group: str,\n        num_booster: int,\n        max_depth: int,\n        min_child_weight: int,\n        learning_rate: float,\n        feature_count: int,\n        scale_pos_multiply_factor: float,\n        eval_metric: str):\n    \"\"\"Run a custom training job using a training script.\n    \"\"\"\n    import json\n    import logging\n    import os.path\n    import time\n    import google.cloud.aiplatform as aip\n\n    worker_pool_specs = [\n        {\n            \"machine_spec\": {\n                \"machine_type\": master_machine_type,\n            },\n            \"replica_count\": 1,\n            \"container_spec\": {\n                \"image_uri\": container_uri,\n                \"command\": ['bash', 'entrypoint.sh'],\n                \"args\": [\n                    '--run_name', job_name + '_' + job_suffix,\n                    '--run_type', run_type,\n                    '--train_start_date', train_start_date,\n                    '--memory_limit', memory_limit,\n                    '--base_gcs_path', base_gcs_path,\n                    '--num_workers', str(num_workers),\n                    '--no_worker_threads', str(no_worker_threads),\n                    '--data_split_path', data_split_path,\n                    '--location_group', location_group,\n                    '--num_booster', str(num_booster),\n                    '--min_train_days', '270',\n                    '--max_depth', str(max_depth),\n                    '--min_child_weight', str(min_child_weight),\n                    '--learning_rate', str(learning_rate),\n                    '--feature_count', str(feature_count),\n                    '--scale_pos_multiply_factor', str(scale_pos_multiply_factor),\n                    '--eval_metric', eval_metric,\n                    '--steps', 'train'\n                ],\n            },\n        },\n        {\n            \"machine_spec\": {\n                \"machine_type\": worker_machine_type,\n            },\n            \"replica_count\": replica_count,\n            \"container_spec\": {\n                \"image_uri\": container_uri,\n                \"command\": ['bash', 'entrypoint.sh'],\n                \"args\": [\n                    '--memory_limit', memory_limit,\n                    '--num_workers', str(num_workers),\n                    '--no_worker_threads', str(no_worker_threads)\n                ],\n            },\n        }\n    ]\n\n    my_job = aip.CustomJob(\n        display_name=job_name + '_' + job_suffix,\n        worker_pool_specs=worker_pool_specs,\n        staging_bucket=staging_bucket,\n        project=project_id,\n        location=project_location\n    )\n\n    my_job.run()\n\n"
          ],
          "image": "python:3.7"
        }
      }
    }
  },
  "pipelineInfo": {
    "description": "Model Training",
    "name": "model-training"
  },
  "root": {
    "dag": {
      "tasks": {
        "custom-eval-job": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-custom-eval-job"
          },
          "dependentTasks": [
            "custom-train-job"
          ],
          "inputs": {
            "parameters": {
              "base_gcs_path": {
                "runtimeValue": {
                  "constant": "gs://extracted-bucket-dollar-tree/Ramalingam/phase2/3M/auditonly/vertex_pipeline"
                }
              },
              "container_uri": {
                "runtimeValue": {
                  "constant": "us-west1-docker.pkg.dev/dollar-tree-project-369709/fd-dask-docker/dask-mlpipeline-image:latest"
                }
              },
              "data_split_path": {
                "componentInputParameter": "data_split_path"
              },
              "fs_eval_path": {
                "componentInputParameter": "fs_eval_path"
              },
              "job_name": {
                "componentInputParameter": "run_name"
              },
              "job_suffix": {
                "runtimeValue": {
                  "constant": "Training_20230718_093805"
                }
              },
              "location_group": {
                "componentInputParameter": "location_group"
              },
              "master_machine_type": {
                "componentInputParameter": "eval_master_machine_type"
              },
              "memory_limit": {
                "componentInputParameter": "eval_memory_limit"
              },
              "no_worker_threads": {
                "componentInputParameter": "eval_no_worker_threads"
              },
              "num_workers": {
                "componentInputParameter": "eval_num_workers"
              },
              "project_id": {
                "runtimeValue": {
                  "constant": "dollar-tree-project-369709"
                }
              },
              "project_location": {
                "runtimeValue": {
                  "constant": "us-west1"
                }
              },
              "replica_count": {
                "componentInputParameter": "eval_replica_count"
              },
              "run_type": {
                "componentInputParameter": "run_type"
              },
              "staging_bucket": {
                "runtimeValue": {
                  "constant": "user-bucket-dollar-tree"
                }
              },
              "worker_machine_type": {
                "componentInputParameter": "eval_worker_machine_type"
              }
            }
          },
          "taskInfo": {
            "name": "custom-eval-job"
          }
        },
        "custom-train-job": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-custom-train-job"
          },
          "inputs": {
            "parameters": {
              "base_gcs_path": {
                "runtimeValue": {
                  "constant": "gs://extracted-bucket-dollar-tree/Ramalingam/phase2/3M/auditonly/vertex_pipeline"
                }
              },
              "container_uri": {
                "runtimeValue": {
                  "constant": "us-west1-docker.pkg.dev/dollar-tree-project-369709/fd-distributed-training/xgb-dask:v12"
                }
              },
              "data_split_path": {
                "componentInputParameter": "data_split_path"
              },
              "eval_metric": {
                "componentInputParameter": "eval_metric"
              },
              "feature_count": {
                "componentInputParameter": "feature_count"
              },
              "job_name": {
                "componentInputParameter": "run_name"
              },
              "job_suffix": {
                "runtimeValue": {
                  "constant": "Training_20230718_093805"
                }
              },
              "learning_rate": {
                "componentInputParameter": "learning_rate"
              },
              "location_group": {
                "componentInputParameter": "location_group"
              },
              "master_machine_type": {
                "componentInputParameter": "train_master_machine_type"
              },
              "max_depth": {
                "componentInputParameter": "max_depth"
              },
              "memory_limit": {
                "componentInputParameter": "train_memory_limit"
              },
              "min_child_weight": {
                "componentInputParameter": "min_child_weight"
              },
              "no_worker_threads": {
                "componentInputParameter": "train_no_worker_threads"
              },
              "num_booster": {
                "componentInputParameter": "num_booster"
              },
              "num_workers": {
                "componentInputParameter": "train_num_workers"
              },
              "project_id": {
                "runtimeValue": {
                  "constant": "dollar-tree-project-369709"
                }
              },
              "project_location": {
                "runtimeValue": {
                  "constant": "us-west1"
                }
              },
              "replica_count": {
                "componentInputParameter": "train_replica_count"
              },
              "run_type": {
                "componentInputParameter": "run_type"
              },
              "scale_pos_multiply_factor": {
                "componentInputParameter": "scale_pos_multiply_factor"
              },
              "staging_bucket": {
                "runtimeValue": {
                  "constant": "user-bucket-dollar-tree"
                }
              },
              "train_start_date": {
                "componentInputParameter": "train_start_date"
              },
              "worker_machine_type": {
                "componentInputParameter": "train_worker_machine_type"
              }
            }
          },
          "taskInfo": {
            "name": "custom-train-job"
          }
        }
      }
    },
    "inputDefinitions": {
      "parameters": {
        "data_split_path": {
          "defaultValue": "gs://extracted-bucket-dollar-tree/Ramalingam/phase2/3M/auditonly/vertex_training_datasplit/feature_store_3m_train-datasplit/data_split.parquet",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "eval_master_machine_type": {
          "defaultValue": "n1-highmem-32",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "eval_memory_limit": {
          "defaultValue": "512GB",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "eval_metric": {
          "defaultValue": "logloss",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "eval_no_worker_threads": {
          "defaultValue": 2.0,
          "isOptional": true,
          "parameterType": "NUMBER_INTEGER"
        },
        "eval_num_workers": {
          "defaultValue": 47.0,
          "isOptional": true,
          "parameterType": "NUMBER_INTEGER"
        },
        "eval_replica_count": {
          "defaultValue": 1.0,
          "isOptional": true,
          "parameterType": "NUMBER_INTEGER"
        },
        "eval_worker_machine_type": {
          "defaultValue": "n1-highmem-96",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "feature_count": {
          "defaultValue": 20.0,
          "isOptional": true,
          "parameterType": "NUMBER_INTEGER"
        },
        "fs_eval_path": {
          "defaultValue": "gs://extracted-bucket-dollar-tree/Ramalingam/phase2/3M/auditonly/feature_store_3m_eval.parquet",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "learning_rate": {
          "defaultValue": 0.1,
          "isOptional": true,
          "parameterType": "NUMBER_DOUBLE"
        },
        "location_group": {
          "defaultValue": "ALL",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "max_depth": {
          "defaultValue": 6.0,
          "isOptional": true,
          "parameterType": "NUMBER_INTEGER"
        },
        "min_child_weight": {
          "defaultValue": 3.0,
          "isOptional": true,
          "parameterType": "NUMBER_INTEGER"
        },
        "num_booster": {
          "defaultValue": 50.0,
          "isOptional": true,
          "parameterType": "NUMBER_INTEGER"
        },
        "run_name": {
          "defaultValue": "3M_TESTRUN1",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "run_type": {
          "defaultValue": "all",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "scale_pos_multiply_factor": {
          "defaultValue": 1.0,
          "isOptional": true,
          "parameterType": "NUMBER_DOUBLE"
        },
        "train_master_machine_type": {
          "defaultValue": "n1-highmem-32",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "train_memory_limit": {
          "defaultValue": "512GB",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "train_no_worker_threads": {
          "defaultValue": 2.0,
          "isOptional": true,
          "parameterType": "NUMBER_INTEGER"
        },
        "train_num_workers": {
          "defaultValue": 47.0,
          "isOptional": true,
          "parameterType": "NUMBER_INTEGER"
        },
        "train_replica_count": {
          "defaultValue": 3.0,
          "isOptional": true,
          "parameterType": "NUMBER_INTEGER"
        },
        "train_start_date": {
          "defaultValue": "2021-08-01",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "train_worker_machine_type": {
          "defaultValue": "n1-highmem-96",
          "isOptional": true,
          "parameterType": "STRING"
        }
      }
    }
  },
  "schemaVersion": "2.1.0",
  "sdkVersion": "kfp-2.0.0"
}